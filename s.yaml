edition: 3.0.0
name: chiwei-bot-server
access: 'undefined'
vars:
  region: 'cn-hongkong'
  functionName: 'chiwei-bot-server'
resources:
  framework:
    component: fc3
    actions:
      pre-deploy:
        - run: npm install --registry=https://registry.npmmirror.com
          path: ./code
        - run: npm run build
          path: ./code
    props:
      region: ${vars.region}
      description: Chiwei bot server
      runtime: custom.debian10
      memorySize: 1024
      timeout: 600
      logConfig: auto
      layers:
        - acs:fc:${vars.region}:official:layers/Nodejs18/versions/3
      environmentVariables:
        PATH: '/opt/nodejs18/bin:/bin'
        END_POINT: ${env(END_POINT)}
        INTERNAL_END_POINT: ${env(INTERNAL_END_POINT)}
        LARK_APP_ID: ${env(LARK_APP_ID)}
        LARK_APP_SECRET: ${env(LARK_APP_SECRET)}
        MONGO_INITDB_ROOT_PASSWORD: ${env(MONGO_INITDB_ROOT_PASSWORD)}
        MONGO_INITDB_ROOT_USERNAME: ${env(MONGO_INITDB_ROOT_USERNAME)}
        MONGO_HOST: ${env(MONGO_HOST)}
        OSS_ACCESS_KEY_ID: ${env(OSS_ACCESS_KEY_ID)}
        OSS_ACCESS_KEY_SECRET: ${env(OSS_ACCESS_KEY_SECRET)}
        OSS_BUCKET: ${env(OSS_BUCKET)}
        REDIS_PASSWORD: ${env(REDIS_PASSWORD)}
        REDIS_HOST: ${env(REDIS_HOST)}
        HTTP_SECRET: ${env(HTTP_SECRET)}
        HTTP_JWT_KEY: ${env(HTTP_JWT_KEY)}
        MYSQL_ROOT_PASSWORD: ${env(MYSQL_ROOT_PASSWORD)}
        MYSQL_HOST: ${env(MYSQL_HOST)}
        MYSQL_DBNAME: ${env(MYSQL_DBNAME)}
        DOMAIN_NAME: ${env(DOMAIN_NAME)}
      customRuntimeConfig:
        command:
          - ./bootstrap
        port: 8888
      functionName: ${vars.functionName}
      code: ./code
      triggers:
        - triggerName: http-trigger
          triggerType: http
          triggerConfig:
            authType: anonymous
            methods:
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
              - HEAD
              - OPTIONS
  fc3_domain_0:
    component: fc3-domain
    props:
      region: ${vars.region}
      domainName: auto
      protocol: HTTP
      routeConfig:
        routes:
          - path: /*
            functionName: ${vars.functionName}